# 메서드 종류

# 인스턴스 메서드
# 인스턴스의 상태를 조작하거나 동작을 수행
# 반드시 첫번째 매개변수로 인스턴스 자신(self)을 전달받음, 변수명은 꼭 self 가 아니어도 됨.
'''
'abc'.upper()
=
# 클래스.메서드(인스턴스 자기자신)
str.upper('abc')  = 'abc'.upper()

'abc'.upper() 처럼 축약형을 쓰기 위해 
인스턴스 메서드의 첫번째 매개변수는 반드시 자기자신!(self)
'''

# constructor method, 생성자 메서드
# 인스턴스 객체가 자동으로 호출되는 메서드
# 인스턴스 변수들의 초기값을 설정


# 클래스 메서드
# @classmethod 데코레이터를 사용하여 정의, 필수
# 호출 시, 첫번째 인자로 호출하는 클래스(cls)가 전달됨
# 기능을 위해 첫번째 인자를 cls로 설정하면 'cls.변수 = ' 형태로 조작이 용이


# static method, 정적 메서드
# 클래스와 인스턴스 상관없이 독립적으로 동작하는 메서드
# 주로 클래스와 관련이 있지만 인스턴스와 상호작용이 필요하지 않은 경우
# 필수적으로 작성해야할 매개변수가 없음. => 즉, 객체 상태나 클래스 상태를 수정할 수 없으며 단지 기능(행동)만을 위한 메서드로 사용 


# 클래스는 모든 메서드를 호출할 수 있음.
# 그러나! 클래스는 클래스 메서드와 스태틱 메서드만 사용하도록 한다
# 마찬가지로 인스턴스는 모든 메서드를 호출 할 수 있지만
# 인스턴스는 인스턴스 메서드만 사용하도록 한다.

# 매직 메서드
# 특정 상황에서 자동으로 호출되는 메서드
# Double underscore(__)가 있는 메서드는 특수한 동작을 위해 만들어진 메서드
# ex)
'''
__str__(self), 
__len__(self), 
__lt__(self,other) 등등

'''

# Decorator, 데코레이터
# 다른 함수의 코드를 유지한 채로 수정하거나 확장하기 위해 사용되는 함수
